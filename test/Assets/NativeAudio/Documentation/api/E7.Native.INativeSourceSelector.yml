### YamlMime:ManagedReference
items:
- uid: E7.Native.INativeSourceSelector
  commentId: T:E7.Native.INativeSourceSelector
  id: INativeSourceSelector
  parent: E7.Native
  children:
  - E7.Native.INativeSourceSelector.NextNativeSourceIndex
  langs:
  - csharp
  - vb
  name: INativeSourceSelector
  nameWithType: INativeSourceSelector
  fullName: E7.Native.INativeSourceSelector
  type: Interface
  source:
    id: INativeSourceSelector
    path: /Users/Sargon/Documents/Unity Projects/Asset Store/NativeAudio/Assets/NativeAudio/Runtime/INativeSourceSelector.cs
    startLine: 17
  assemblies:
  - E7.NativeAudio
  namespace: E7.Native
  summary: "\nAn `interface` to use with <xref href=\"E7.Native.NativeAudio.GetNativeSourceAuto(E7.Native.INativeSourceSelector)\" data-throw-if-not-resolved=\"false\"></xref>\nYou can implement your own logic that derives an index depending on some internal state.\n"
  remarks: "\nYou can for example create `class MyKickDrumSelector : INativeSourceSelector` \nand `class MySnareSelector : INativeSourceSelector`.\n\nThe target is that the kick is short, but often used. You want it to use native source index 0 exclusively.\nThe snares keep using index 1 and 2 to not have to trouble the kick drum.\n\nCode the logic such that : \n- The kick drum one keeps returning `0` in its <xref href=\"E7.Native.INativeSourceSelector.NextNativeSourceIndex\" data-throw-if-not-resolved=\"false\"></xref> implementation.\n- The snare one return `1` and `2` alternately on each <xref href=\"E7.Native.INativeSourceSelector.NextNativeSourceIndex\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  example: []
  syntax:
    content: public interface INativeSourceSelector
    content.vb: Public Interface INativeSourceSelector
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: E7.Native.INativeSourceSelector.NextNativeSourceIndex
  commentId: M:E7.Native.INativeSourceSelector.NextNativeSourceIndex
  id: NextNativeSourceIndex
  parent: E7.Native.INativeSourceSelector
  langs:
  - csharp
  - vb
  name: NextNativeSourceIndex()
  nameWithType: INativeSourceSelector.NextNativeSourceIndex()
  fullName: E7.Native.INativeSourceSelector.NextNativeSourceIndex()
  type: Method
  source:
    id: NextNativeSourceIndex
    path: /Users/Sargon/Documents/Unity Projects/Asset Store/NativeAudio/Assets/NativeAudio/Runtime/INativeSourceSelector.cs
    startLine: 26
  assemblies:
  - E7.NativeAudio
  namespace: E7.Native
  summary: "\nEach call could return a different native source index by your own logic.\nNative Audio will call this once on each <xref href=\"E7.Native.NativeAudio.GetNativeSourceAuto(E7.Native.INativeSourceSelector)\" data-throw-if-not-resolved=\"false\"></xref>\n\nIf the returned `int` turns out to be an invalid index at native side, it has a fallback to round-robin\nnative source selection.\n"
  example: []
  syntax:
    content: int NextNativeSourceIndex()
    return:
      type: System.Int32
    content.vb: Function NextNativeSourceIndex As Integer
  overload: E7.Native.INativeSourceSelector.NextNativeSourceIndex*
references:
- uid: E7.Native.NativeAudio.GetNativeSourceAuto(E7.Native.INativeSourceSelector)
  commentId: M:E7.Native.NativeAudio.GetNativeSourceAuto(E7.Native.INativeSourceSelector)
  isExternal: true
- uid: E7.Native.INativeSourceSelector.NextNativeSourceIndex
  commentId: M:E7.Native.INativeSourceSelector.NextNativeSourceIndex
  isExternal: true
- uid: E7.Native
  commentId: N:E7.Native
  name: E7.Native
  nameWithType: E7.Native
  fullName: E7.Native
- uid: E7.Native.INativeSourceSelector.NextNativeSourceIndex*
  commentId: Overload:E7.Native.INativeSourceSelector.NextNativeSourceIndex
  name: NextNativeSourceIndex
  nameWithType: INativeSourceSelector.NextNativeSourceIndex
  fullName: E7.Native.INativeSourceSelector.NextNativeSourceIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
